{"version":3,"file":"objectWithoutOptionalProperties.js","sourceRoot":"/","sources":["client/codegen/core/schemas/builders/object/objectWithoutOptionalProperties.ts"],"names":[],"mappings":";;;AAAA,qCAAkC;AAGlC,SAAgB,+BAA+B,CAC3C,OAAU;IAEV,OAAO,IAAA,eAAM,EAAC,OAAO,CAAgF,CAAC;AAC1G,CAAC;AAJD,0EAIC","sourcesContent":["import { object } from \"./object\";\nimport { inferParsedPropertySchema, inferRawObjectFromPropertySchemas, ObjectSchema, PropertySchemas } from \"./types\";\n\nexport function objectWithoutOptionalProperties<ParsedKeys extends string, T extends PropertySchemas<ParsedKeys>>(\n    schemas: T\n): inferObjectWithoutOptionalPropertiesSchemaFromPropertySchemas<T> {\n    return object(schemas) as unknown as inferObjectWithoutOptionalPropertiesSchemaFromPropertySchemas<T>;\n}\n\nexport type inferObjectWithoutOptionalPropertiesSchemaFromPropertySchemas<T extends PropertySchemas<keyof T>> =\n    ObjectSchema<\n        inferRawObjectFromPropertySchemas<T>,\n        inferParsedObjectWithoutOptionalPropertiesFromPropertySchemas<T>\n    >;\n\nexport type inferParsedObjectWithoutOptionalPropertiesFromPropertySchemas<T extends PropertySchemas<keyof T>> = {\n    [K in keyof T]: inferParsedPropertySchema<T[K]>;\n};\n"]}