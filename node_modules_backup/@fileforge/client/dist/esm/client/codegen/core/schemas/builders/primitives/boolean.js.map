{"version":3,"file":"boolean.js","sourceRoot":"/","sources":["client/codegen/core/schemas/builders/primitives/boolean.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,2BAA2B,EAAE,MAAM,yCAAyC,CAAC;AACtF,OAAO,EAAE,+BAA+B,EAAE,MAAM,6CAA6C,CAAC;AAE9F,MAAM,CAAC,MAAM,OAAO,GAAG,2BAA2B,CAC9C,UAAU,CAAC,OAAO,EAClB,CAAC,KAAK,EAAE,EAAE,iBAAiB,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;IACvC,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE,CAAC;QAC7B,OAAO;YACH,EAAE,EAAE,IAAI;YACR,KAAK;SACR,CAAC;IACN,CAAC;SAAM,CAAC;QACJ,OAAO;YACH,EAAE,EAAE,KAAK;YACT,MAAM,EAAE;gBACJ;oBACI,IAAI,EAAE,iBAAiB;oBACvB,OAAO,EAAE,+BAA+B,CAAC,KAAK,EAAE,SAAS,CAAC;iBAC7D;aACJ;SACJ,CAAC;IACN,CAAC;AACL,CAAC,CACJ,CAAC","sourcesContent":["import { SchemaType } from \"../../Schema\";\nimport { createIdentitySchemaCreator } from \"../../utils/createIdentitySchemaCreator\";\nimport { getErrorMessageForIncorrectType } from \"../../utils/getErrorMessageForIncorrectType\";\n\nexport const boolean = createIdentitySchemaCreator<boolean>(\n    SchemaType.BOOLEAN,\n    (value, { breadcrumbsPrefix = [] } = {}) => {\n        if (typeof value === \"boolean\") {\n            return {\n                ok: true,\n                value,\n            };\n        } else {\n            return {\n                ok: false,\n                errors: [\n                    {\n                        path: breadcrumbsPrefix,\n                        message: getErrorMessageForIncorrectType(value, \"boolean\"),\n                    },\n                ],\n            };\n        }\n    }\n);\n"]}