{"version":3,"file":"getErrorMessageForIncorrectType.js","sourceRoot":"/","sources":["client/codegen/core/schemas/utils/getErrorMessageForIncorrectType.ts"],"names":[],"mappings":"AAAA,cAAc;AAEV,MAAM,UAAU,+BAA+B,CAAC,KAAc,EAAE,YAAoB;IACpF,OAAO,YAAY,YAAY,cAAc,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC;AAC3E,CAAC;AAED,SAAS,eAAe,CAAC,KAAc;IACnC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;QACvB,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;QACjB,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,QAAQ,OAAO,KAAK,EAAE,CAAC;QACnB,KAAK,QAAQ;YACT,OAAO,IAAI,KAAK,GAAG,CAAC;QACxB,KAAK,QAAQ,CAAC;QACd,KAAK,SAAS,CAAC;QACf,KAAK,WAAW;YACZ,OAAO,GAAG,KAAK,EAAE,CAAC;IAC1B,CAAC;IACD,OAAO,OAAO,KAAK,CAAC;AACxB,CAAC","sourcesContent":["// @ts-nocheck\n\n    export function getErrorMessageForIncorrectType(value: unknown, expectedType: string): string {\n    return `Expected ${expectedType}. Received ${getTypeAsString(value)}.`;\n}\n\nfunction getTypeAsString(value: unknown): string {\n    if (Array.isArray(value)) {\n        return \"list\";\n    }\n    if (value === null) {\n        return \"null\";\n    }\n    switch (typeof value) {\n        case \"string\":\n            return `\"${value}\"`;\n        case \"number\":\n        case \"boolean\":\n        case \"undefined\":\n            return `${value}`;\n    }\n    return typeof value;\n}\n"]}