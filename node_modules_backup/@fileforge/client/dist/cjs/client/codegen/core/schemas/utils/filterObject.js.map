{"version":3,"file":"filterObject.js","sourceRoot":"/","sources":["client/codegen/core/schemas/utils/filterObject.ts"],"names":[],"mappings":";AAAA,cAAc;;;AAEV,SAAgB,YAAY,CAAuB,GAAM,EAAE,aAAkB;IAC7E,MAAM,gBAAgB,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,CAAC;IAChD,OAAO,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QACpD,IAAI,gBAAgB,CAAC,GAAG,CAAC,GAAQ,CAAC,EAAE,CAAC;YACjC,GAAG,CAAC,GAAQ,CAAC,GAAG,KAAK,CAAC;QAC1B,CAAC;QACD,OAAO,GAAG,CAAC;QACX,2EAA2E;IAC/E,CAAC,EAAE,EAAgB,CAAC,CAAC;AACzB,CAAC;AATG,oCASH","sourcesContent":["// @ts-nocheck\n\n    export function filterObject<T, K extends keyof T>(obj: T, keysToInclude: K[]): Pick<T, K> {\n    const keysToIncludeSet = new Set(keysToInclude);\n    return Object.entries(obj).reduce((acc, [key, value]) => {\n        if (keysToIncludeSet.has(key as K)) {\n            acc[key as K] = value;\n        }\n        return acc;\n        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n    }, {} as Pick<T, K>);\n}\n"]}