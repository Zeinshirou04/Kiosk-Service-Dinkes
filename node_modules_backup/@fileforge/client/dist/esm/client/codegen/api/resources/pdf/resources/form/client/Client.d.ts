/**
 * This file was auto-generated by Fern from our API Definition.
 */
/// <reference types="node" />
/// <reference types="node" />
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as fs from "fs";
import * as Fileforge from "../../../../../index";
import * as stream from "stream";
export declare namespace Form {
    interface Options {
        environment?: core.Supplier<environments.FileforgeEnvironment | string>;
        apiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
        abortSignal?: AbortSignal;
    }
}
export declare class Form {
    protected readonly _options: Form.Options;
    constructor(_options?: Form.Options);
    /**
     * Returns a list of form fields detected in the PDF document, along with their location, options and requirements. For a more visual representation, use the /pdf/form/mark endpoint.
     *
     * @param {File | fs.ReadStream} file
     * @param {Fileforge.pdf.FormDetectRequest} request
     * @param {Form.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link Fileforge.BadRequestError}
     * @throws {@link Fileforge.UnauthorizedError}
     * @throws {@link Fileforge.InternalServerError}
     *
     * @example
     *     await fileforge.pdf.form.detect(fs.createReadStream("/path/to/your/file"), {})
     */
    detect(file: File | fs.ReadStream, request: Fileforge.pdf.FormDetectRequest, requestOptions?: Form.RequestOptions): Promise<Fileforge.pdf.FormDetectResponseItem[]>;
    /**
     * Returns a modified PDF document with form fields marked with a green border, and hover text showing the field name.
     * @throws {@link Fileforge.BadRequestError}
     * @throws {@link Fileforge.UnauthorizedError}
     * @throws {@link Fileforge.InternalServerError}
     */
    mark(file: File | fs.ReadStream, request: Fileforge.pdf.FormMarkRequest, requestOptions?: Form.RequestOptions): Promise<stream.Readable>;
    /**
     * Returns a modified PDF document with filled form fields. A subset of fields can be filled.
     * @throws {@link Fileforge.BadRequestError}
     * @throws {@link Fileforge.UnauthorizedError}
     * @throws {@link Fileforge.InternalServerError}
     */
    fill(file: File | fs.ReadStream, request: Fileforge.pdf.FormFillRequest, requestOptions?: Form.RequestOptions): Promise<stream.Readable>;
    protected _getCustomAuthorizationHeaders(): Promise<{
        "X-API-Key": string | undefined;
    }>;
}
