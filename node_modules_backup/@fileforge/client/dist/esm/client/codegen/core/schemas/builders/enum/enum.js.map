{"version":3,"file":"enum.js","sourceRoot":"/","sources":["client/codegen/core/schemas/builders/enum/enum.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,UAAU,EAAE,MAAM,cAAc,CAAC;AAClD,OAAO,EAAE,2BAA2B,EAAE,MAAM,yCAAyC,CAAC;AACtF,OAAO,EAAE,+BAA+B,EAAE,MAAM,6CAA6C,CAAC;AAE9F,MAAM,UAAU,KAAK,CAAkC,MAAS;IAC5D,MAAM,WAAW,GAAG,IAAI,GAAG,CAAS,MAAM,CAAC,CAAC;IAE5C,MAAM,aAAa,GAAG,2BAA2B,CAC7C,UAAU,CAAC,IAAI,EACf,CAAC,KAAK,EAAE,EAAE,2BAA2B,EAAE,iBAAiB,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;QACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC5B,OAAO;gBACH,EAAE,EAAE,KAAK;gBACT,MAAM,EAAE;oBACJ;wBACI,IAAI,EAAE,iBAAiB;wBACvB,OAAO,EAAE,+BAA+B,CAAC,KAAK,EAAE,QAAQ,CAAC;qBAC5D;iBACJ;aACJ,CAAC;QACN,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,2BAA2B,EAAE,CAAC;YAC1D,OAAO;gBACH,EAAE,EAAE,KAAK;gBACT,MAAM,EAAE;oBACJ;wBACI,IAAI,EAAE,iBAAiB;wBACvB,OAAO,EAAE,+BAA+B,CAAC,KAAK,EAAE,MAAM,CAAC;qBAC1D;iBACJ;aACJ,CAAC;QACN,CAAC;QAED,OAAO;YACH,EAAE,EAAE,IAAI;YACR,KAAK,EAAE,KAAU;SACpB,CAAC;IACN,CAAC,CACJ,CAAC;IAEF,OAAO,aAAa,EAAE,CAAC;AAC3B,CAAC","sourcesContent":["import { Schema, SchemaType } from \"../../Schema\";\nimport { createIdentitySchemaCreator } from \"../../utils/createIdentitySchemaCreator\";\nimport { getErrorMessageForIncorrectType } from \"../../utils/getErrorMessageForIncorrectType\";\n\nexport function enum_<U extends string, E extends U[]>(values: E): Schema<E[number], E[number]> {\n    const validValues = new Set<string>(values);\n\n    const schemaCreator = createIdentitySchemaCreator(\n        SchemaType.ENUM,\n        (value, { allowUnrecognizedEnumValues, breadcrumbsPrefix = [] } = {}) => {\n            if (typeof value !== \"string\") {\n                return {\n                    ok: false,\n                    errors: [\n                        {\n                            path: breadcrumbsPrefix,\n                            message: getErrorMessageForIncorrectType(value, \"string\"),\n                        },\n                    ],\n                };\n            }\n\n            if (!validValues.has(value) && !allowUnrecognizedEnumValues) {\n                return {\n                    ok: false,\n                    errors: [\n                        {\n                            path: breadcrumbsPrefix,\n                            message: getErrorMessageForIncorrectType(value, \"enum\"),\n                        },\n                    ],\n                };\n            }\n\n            return {\n                ok: true,\n                value: value as U,\n            };\n        }\n    );\n\n    return schemaCreator();\n}\n"]}