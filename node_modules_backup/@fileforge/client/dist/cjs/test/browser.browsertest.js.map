{"version":3,"file":"browser.browsertest.js","sourceRoot":"/","sources":["test/browser.browsertest.ts"],"names":[],"mappings":";;AAAA,mCAA8C;AAC9C,qCAA2C;AAE3C,aAAa;AACb,MAAM,MAAM,GAAG,qBAA+B,CAAC;AAE/C,IAAA,iBAAQ,EAAC,SAAS,EAAE,GAAG,EAAE;IACvB,IAAA,WAAE,EAAC,aAAa,EAAE,GAAG,EAAE;QACrB,wDAAwD;QACxD,IAAA,eAAM,EAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;QAE3B,IAAA,eAAM,EACJ,IAAI,wBAAe,CAAC;YAClB,MAAM;SACP,CAAC,CACH,CAAC,cAAc,CAAC,wBAAe,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,IAAA,WAAE,EAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,MAAM,EAAE,GAAG,IAAI,wBAAe,CAAC;YAC7B,MAAM;SACP,CAAC,CAAC;QAEH,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;QAEhE,IAAA,eAAM,EAAC,GAAG,CAAC,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,IAAA,WAAE,EAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,EAAE,GAAG,IAAI,wBAAe,CAAC;YAC7B,MAAM;SACP,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,wBAAwB,EAAE;YAC9D,OAAO,EAAE;gBACP,IAAI,EAAE,IAAI;aACX;SACF,CAAC,CAAC;QAEH,IAAA,eAAM,EAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { describe, it, expect } from \"vitest\";\nimport { FileforgeClient } from \"@/client\";\n\n// @ts-ignore\nconst apiKey = __FILEFORGE_API_KEY__ as string;\n\ndescribe(\"browser\", () => {\n  it(\"should work\", () => {\n    // Ensure that File is not available in the global scope\n    expect(File).toBeDefined();\n\n    expect(\n      new FileforgeClient({\n        apiKey,\n      }),\n    ).toBeInstanceOf(FileforgeClient);\n  });\n\n  it(\"should generate a doc\", async () => {\n    const ff = new FileforgeClient({\n      apiKey,\n    });\n\n    const doc = await ff.pdf.generate(\"<h1>Hello, World!</h1>\", {});\n\n    expect(doc).toBeInstanceOf(ReadableStream);\n  });\n\n  it(\"should get a generated doc URL\", async () => {\n    const ff = new FileforgeClient({\n      apiKey,\n    });\n\n    const { url } = await ff.pdf.generate(\"<h1>Hello, World!</h1>\", {\n      options: {\n        host: true,\n      },\n    });\n\n    expect(url).toBeDefined();\n  });\n});\n"]}