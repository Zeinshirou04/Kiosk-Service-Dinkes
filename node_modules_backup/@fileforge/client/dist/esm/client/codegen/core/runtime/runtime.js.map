{"version":3,"file":"runtime.js","sourceRoot":"/","sources":["client/codegen/core/runtime/runtime.ts"],"names":[],"mappings":"AAaA;;GAEG;AACH,MAAM,SAAS,GAAG,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,CAAC;AAE1F;;GAEG;AACH,MAAM,WAAW,GACb,OAAO,IAAI,KAAK,QAAQ;IACxB,aAAa;IACb,OAAO,IAAI,EAAE,aAAa,KAAK,UAAU;IACzC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,KAAK,4BAA4B;QACpD,IAAI,CAAC,WAAW,EAAE,IAAI,KAAK,0BAA0B;QACrD,IAAI,CAAC,WAAW,EAAE,IAAI,KAAK,yBAAyB,CAAC,CAAC;AAE9D;;GAEG;AACH,MAAM,MAAM,GACR,OAAO,IAAI,KAAK,WAAW,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,WAAW,CAAC;AAEnH;;GAEG;AACH,MAAM,KAAK,GAAG,OAAO,GAAG,KAAK,WAAW,IAAI,OAAO,GAAG,CAAC,OAAO,KAAK,WAAW,CAAC;AAE/E;;GAEG;AACH,MAAM,MAAM,GACR,OAAO,OAAO,KAAK,WAAW;IAC9B,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;IACxB,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;IAC/B,kGAAkG;IAClG,CAAC,MAAM;IACP,CAAC,KAAK,CAAC;AAEX;;;GAGG;AACH,MAAM,aAAa,GAAG,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE,OAAO,KAAK,aAAa,CAAC;AAE/F;;GAEG;AACH,MAAM,CAAC,MAAM,OAAO,GAAY,eAAe,EAAE,CAAC;AAOlD,SAAS,eAAe;IACpB,IAAI,SAAS,EAAE,CAAC;QACZ,OAAO;YACH,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,SAAS;SACtC,CAAC;IACN,CAAC;IAED,IAAI,WAAW,EAAE,CAAC;QACd,OAAO;YACH,IAAI,EAAE,YAAY;SACrB,CAAC;IACN,CAAC;IAED,IAAI,MAAM,EAAE,CAAC;QACT,OAAO;YACH,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI;SAC7B,CAAC;IACN,CAAC;IAED,IAAI,KAAK,EAAE,CAAC;QACR,OAAO;YACH,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,GAAG,CAAC,OAAO;SACvB,CAAC;IACN,CAAC;IAED,IAAI,MAAM,EAAE,CAAC;QACT,OAAO;YACH,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,IAAI;SACjC,CAAC;IACN,CAAC;IAED,IAAI,aAAa,EAAE,CAAC;QAChB,OAAO;YACH,IAAI,EAAE,cAAc;SACvB,CAAC;IACN,CAAC;IAED,OAAO;QACH,IAAI,EAAE,SAAS;KAClB,CAAC;AACN,CAAC","sourcesContent":["interface DenoGlobal {\n    version: {\n        deno: string;\n    };\n}\n\ninterface BunGlobal {\n    version: string;\n}\n\ndeclare const Deno: DenoGlobal;\ndeclare const Bun: BunGlobal;\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nconst isWebWorker =\n    typeof self === \"object\" &&\n    // @ts-ignore\n    typeof self?.importScripts === \"function\" &&\n    (self.constructor?.name === \"DedicatedWorkerGlobalScope\" ||\n        self.constructor?.name === \"ServiceWorkerGlobalScope\" ||\n        self.constructor?.name === \"SharedWorkerGlobalScope\");\n\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nconst isDeno =\n    typeof Deno !== \"undefined\" && typeof Deno.version !== \"undefined\" && typeof Deno.version.deno !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nconst isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nconst isNode =\n    typeof process !== \"undefined\" &&\n    Boolean(process.version) &&\n    Boolean(process.versions?.node) &&\n    // Deno spoofs process.versions.node, see https://deno.land/std@0.177.0/node/process.ts?s=versions\n    !isDeno &&\n    !isBun;\n\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n * https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\n */\nconst isReactNative = typeof navigator !== \"undefined\" && navigator?.product === \"ReactNative\";\n\n/**\n * A constant that indicates which environment and version the SDK is running in.\n */\nexport const RUNTIME: Runtime = evaluateRuntime();\n\nexport interface Runtime {\n    type: \"browser\" | \"web-worker\" | \"deno\" | \"bun\" | \"node\" | \"react-native\" | \"unknown\";\n    version?: string;\n}\n\nfunction evaluateRuntime(): Runtime {\n    if (isBrowser) {\n        return {\n            type: \"browser\",\n            version: window.navigator.userAgent,\n        };\n    }\n\n    if (isWebWorker) {\n        return {\n            type: \"web-worker\",\n        };\n    }\n\n    if (isDeno) {\n        return {\n            type: \"deno\",\n            version: Deno.version.deno,\n        };\n    }\n\n    if (isBun) {\n        return {\n            type: \"bun\",\n            version: Bun.version,\n        };\n    }\n\n    if (isNode) {\n        return {\n            type: \"node\",\n            version: process.versions.node,\n        };\n    }\n\n    if (isReactNative) {\n        return {\n            type: \"react-native\",\n        };\n    }\n\n    return {\n        type: \"unknown\",\n    };\n}\n"]}