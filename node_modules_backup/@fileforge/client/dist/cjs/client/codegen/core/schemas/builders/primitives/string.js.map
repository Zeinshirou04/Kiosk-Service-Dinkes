{"version":3,"file":"string.js","sourceRoot":"/","sources":["client/codegen/core/schemas/builders/primitives/string.ts"],"names":[],"mappings":";;;AAAA,yCAA0C;AAC1C,yFAAsF;AACtF,iGAA8F;AAEjF,QAAA,MAAM,GAAG,IAAA,yDAA2B,EAC7C,mBAAU,CAAC,MAAM,EACjB,CAAC,KAAK,EAAE,EAAE,iBAAiB,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;IACvC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC5B,OAAO;YACH,EAAE,EAAE,IAAI;YACR,KAAK;SACR,CAAC;IACN,CAAC;SAAM,CAAC;QACJ,OAAO;YACH,EAAE,EAAE,KAAK;YACT,MAAM,EAAE;gBACJ;oBACI,IAAI,EAAE,iBAAiB;oBACvB,OAAO,EAAE,IAAA,iEAA+B,EAAC,KAAK,EAAE,QAAQ,CAAC;iBAC5D;aACJ;SACJ,CAAC;IACN,CAAC;AACL,CAAC,CACJ,CAAC","sourcesContent":["import { SchemaType } from \"../../Schema\";\nimport { createIdentitySchemaCreator } from \"../../utils/createIdentitySchemaCreator\";\nimport { getErrorMessageForIncorrectType } from \"../../utils/getErrorMessageForIncorrectType\";\n\nexport const string = createIdentitySchemaCreator<string>(\n    SchemaType.STRING,\n    (value, { breadcrumbsPrefix = [] } = {}) => {\n        if (typeof value === \"string\") {\n            return {\n                ok: true,\n                value,\n            };\n        } else {\n            return {\n                ok: false,\n                errors: [\n                    {\n                        path: breadcrumbsPrefix,\n                        message: getErrorMessageForIncorrectType(value, \"string\"),\n                    },\n                ],\n            };\n        }\n    }\n);\n"]}